name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: [8.2, 8.3]
        laravel: [11.*, 12.*]
        dependency-version: [prefer-lowest, prefer-stable]
        include:
          - laravel: 11.*
            testbench: ^9.0
          - laravel: 12.*
            testbench: ^10.0

    name: PHP${{ matrix.php }} - Laravel${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    services:
      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: laravel
          RABBITMQ_DEFAULT_PASS: secret
          RABBITMQ_DEFAULT_VHOST: b2b-field
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, amqp
          coverage: xdebug

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Wait for RabbitMQ
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:15672/api/overview -u laravel:secret; do sleep 2; done'

      - name: List installed packages
        run: composer show -D

      - name: Execute tests
        run: vendor/bin/pest --coverage-clover=coverage.clover

      - name: Upload coverage reports to Codecov
        if: matrix.php == '8.3' && matrix.laravel == '12.*' && matrix.dependency-version == 'prefer-stable'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.clover
          fail_ci_if_error: false