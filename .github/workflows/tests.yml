name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.2, 8.3, 8.4]
        laravel: [11.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 11.*
            testbench: 9.*
            carbon: ^2.63

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    services:
      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: laravel
          RABBITMQ_DEFAULT_PASS: secret
          RABBITMQ_DEFAULT_VHOST: laravel-rabbitmq
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
          --health-start-period 30s

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, amqp
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Wait for RabbitMQ
        run: |
          for i in {1..30}; do
            if rabbitmqctl -n rabbit@localhost status > /dev/null 2>&1; then
              echo "RabbitMQ is ready"
              break
            fi
            echo "Waiting for RabbitMQ... ($i/30)"
            sleep 2
          done

      - name: Configure RabbitMQ
        run: |
          docker exec $(docker ps -q --filter ancestor=rabbitmq:3-management) rabbitmqctl add_user laravel secret || true
          docker exec $(docker ps -q --filter ancestor=rabbitmq:3-management) rabbitmqctl add_vhost laravel-rabbitmq || true
          docker exec $(docker ps -q --filter ancestor=rabbitmq:3-management) rabbitmqctl set_permissions -p laravel-rabbitmq laravel ".*" ".*" ".*" || true

      - name: Execute tests (Unit and Feature tests) via Pest
        env:
          RABBITMQ_HOST: 127.0.0.1
          RABBITMQ_PORT: 5672
          RABBITMQ_USER: laravel
          RABBITMQ_PASSWORD: secret
          RABBITMQ_VHOST: laravel-rabbitmq
        run: vendor/bin/pest --ci --colors=always

      - name: Execute tests (Unit and Feature tests) via Pest with Coverage
        if: matrix.php == '8.3' && matrix.laravel == '11.*' && matrix.stability == 'prefer-stable'
        env:
          RABBITMQ_HOST: 127.0.0.1
          RABBITMQ_PORT: 5672
          RABBITMQ_USER: laravel
          RABBITMQ_PASSWORD: secret
          RABBITMQ_VHOST: laravel-rabbitmq
        run: vendor/bin/pest --coverage --ci --colors=always