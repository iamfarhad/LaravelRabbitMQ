name: Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.2, 8.3]
        laravel: [11.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 11.*
            testbench: 9.*
            carbon: ^2.63

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    services:
      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: laravel
          RABBITMQ_DEFAULT_PASS: secret
          RABBITMQ_DEFAULT_VHOST: b2b-field
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 20s

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, amqp
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Wait for RabbitMQ
        run: |
          echo "Waiting for RabbitMQ to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:15672/api/overview -u laravel:secret > /dev/null 2>&1; do 
            echo "RabbitMQ not ready yet, waiting..."
            sleep 2
          done'
          echo "RabbitMQ is ready!"

      - name: Verify RabbitMQ Configuration
        run: |
          echo "Checking RabbitMQ status..."
          curl -u laravel:secret http://localhost:15672/api/overview | jq '.rabbitmq_version'
          echo "Checking vhost..."
          curl -u laravel:secret http://localhost:15672/api/vhosts | jq '.[].name'

      - name: Execute tests (Unit and Feature tests) via Pest
        env:
          RABBITMQ_HOST: 127.0.0.1
          RABBITMQ_PORT: 5672
          RABBITMQ_USER: laravel
          RABBITMQ_PASSWORD: secret
          RABBITMQ_VHOST: b2b-field
        run: vendor/bin/pest --ci --colors=always

      - name: Execute tests (Unit and Feature tests) via Pest with Coverage
        if: matrix.php == '8.3' && matrix.laravel == '11.*' && matrix.stability == 'prefer-stable'
        env:
          RABBITMQ_HOST: 127.0.0.1
          RABBITMQ_PORT: 5672
          RABBITMQ_USER: laravel
          RABBITMQ_PASSWORD: secret
          RABBITMQ_VHOST: b2b-field
        run: vendor/bin/pest --coverage-clover=coverage.clover --ci --colors=always

      - name: Upload coverage reports to Codecov
        if: matrix.php == '8.3' && matrix.laravel == '11.*' && matrix.stability == 'prefer-stable'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.clover
          fail_ci_if_error: false